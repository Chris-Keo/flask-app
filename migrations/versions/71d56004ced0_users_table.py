"""users table

Revision ID: 71d56004ced0
Revises: 9001f5b93839
Create Date: 2023-11-20 23:35:21.718124

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '71d56004ced0'
down_revision = '9001f5b93839'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_info_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_info_username'), ['username'], unique=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_email')
        batch_op.drop_index('ix_user_username')

    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), nullable=True),
    sa.Column('email', sa.VARCHAR(length=120), nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_username', ['username'], unique=False)
        batch_op.create_index('ix_user_email', ['email'], unique=False)

    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_info_username'))
        batch_op.drop_index(batch_op.f('ix_user_info_email'))

    op.drop_table('user_info')
    # ### end Alembic commands ###
